diff --git a/src/login/account.h b/src/login/account.h
index 7e1930a..6f9221a 100644
--- a/src/login/account.h
+++ b/src/login/account.h
@@ -43,6 +43,7 @@ struct mmo_account
 	char pass[32+1];            // 23+1 for plaintext, 32+1 for md5-ed passwords
 	char sex;                   // gender (M/F/S)
 	char email[40];             // e-mail (by default: a@a.com)
+	char mac_address[17];       // Mac Address
 	int group_id;               // player group id
 	uint8 char_slots;           // this accounts maximum character slots (maximum is limited to MAX_CHARS define in char server)
 	unsigned int state;         // packet 0x006a value + 1 (0: complete OK)
diff --git a/src/login/account_sql.c b/src/login/account_sql.c
index 195a102..519eac3 100644
--- a/src/login/account_sql.c
+++ b/src/login/account_sql.c
@@ -583,7 +583,7 @@ static bool mmo_auth_fromsql(AccountDB_SQL* db, struct mmo_account* acc, int acc
 	sql_handle = db->accounts;
 	// retrieve login entry for the specified account
 	if( SQL_ERROR == SQL->Query(sql_handle,
-	    "SELECT `account_id`,`userid`,`user_pass`,`sex`,`email`,`group_id`,`state`,`unban_time`,`expiration_time`,`logincount`,`lastlogin`,`last_ip`,`birthdate`,`character_slots`,`pincode`,`pincode_change` FROM `%s` WHERE `account_id` = %d",
+	    "SELECT `account_id`,`userid`,`user_pass`,`sex`,`email`,`group_id`,`state`,`unban_time`,`expiration_time`,`logincount`,`lastlogin`,`last_ip`,`birthdate`,`character_slots`,`pincode`,`pincode_change`,`last_mac` FROM `%s` WHERE `account_id` = %d",
 		db->account_db, account_id )
 	) {
 		Sql_ShowDebug(sql_handle);
@@ -612,6 +612,7 @@ static bool mmo_auth_fromsql(AccountDB_SQL* db, struct mmo_account* acc, int acc
 	SQL->GetData(sql_handle, 13, &data, NULL); acc->char_slots = (uint8)atoi(data);
 	SQL->GetData(sql_handle, 14, &data, NULL); safestrncpy(acc->pincode, data, sizeof(acc->pincode));
 	SQL->GetData(sql_handle, 15, &data, NULL); acc->pincode_change = (unsigned int)atol(data);
+	SQL->GetData(sql_handle, 16, &data, NULL); safestrncpy(acc->mac_address, data, sizeof(acc->mac_address));
 
 	SQL->FreeResult(sql_handle);
 
@@ -642,7 +643,7 @@ static bool mmo_auth_tosql(AccountDB_SQL* db, const struct mmo_account* acc, boo
 	if( is_new )
 	{// insert into account table
 		if( SQL_SUCCESS != SQL->StmtPrepare(stmt,
-			"INSERT INTO `%s` (`account_id`, `userid`, `user_pass`, `sex`, `email`, `group_id`, `state`, `unban_time`, `expiration_time`, `logincount`, `lastlogin`, `last_ip`, `birthdate`, `character_slots`, `pincode`, `pincode_change`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",
+			"INSERT INTO `%s` (`account_id`, `userid`, `user_pass`, `sex`, `email`, `group_id`, `state`, `unban_time`, `expiration_time`, `logincount`, `lastlogin`, `last_ip`, `birthdate`, `character_slots`, `pincode`, `pincode_change`, `last_mac`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",
 			db->account_db)
 		||  SQL_SUCCESS != SQL->StmtBindParam(stmt,  0, SQLDT_INT,    &acc->account_id,      sizeof(acc->account_id))
 		||  SQL_SUCCESS != SQL->StmtBindParam(stmt,  1, SQLDT_STRING, acc->userid,           strlen(acc->userid))
@@ -660,13 +661,14 @@ static bool mmo_auth_tosql(AccountDB_SQL* db, const struct mmo_account* acc, boo
 		||  SQL_SUCCESS != SQL->StmtBindParam(stmt, 13, SQLDT_UCHAR,  &acc->char_slots,      sizeof(acc->char_slots))
 		||  SQL_SUCCESS != SQL->StmtBindParam(stmt, 14, SQLDT_STRING, &acc->pincode,         strlen(acc->pincode))
 		||  SQL_SUCCESS != SQL->StmtBindParam(stmt, 15, SQLDT_LONG,   &acc->pincode_change,  sizeof(acc->pincode_change))
+		||  SQL_SUCCESS != SQL->StmtBindParam(stmt, 16, SQLDT_STRING, &acc->mac_address,     strlen(acc->mac_address))
 		||  SQL_SUCCESS != SQL->StmtExecute(stmt)
 		) {
 			SqlStmt_ShowDebug(stmt);
 			break;
 		}
 	} else {// update account table
-		if( SQL_SUCCESS != SQL->StmtPrepare(stmt, "UPDATE `%s` SET `userid`=?,`user_pass`=?,`sex`=?,`email`=?,`group_id`=?,`state`=?,`unban_time`=?,`expiration_time`=?,`logincount`=?,`lastlogin`=?,`last_ip`=?,`birthdate`=?,`character_slots`=?,`pincode`=?,`pincode_change`=? WHERE `account_id` = '%d'", db->account_db, acc->account_id)
+		if( SQL_SUCCESS != SQL->StmtPrepare(stmt, "UPDATE `%s` SET `userid`=?,`user_pass`=?,`sex`=?,`email`=?,`group_id`=?,`state`=?,`unban_time`=?,`expiration_time`=?,`logincount`=?,`lastlogin`=?,`last_ip`=?,`birthdate`=?,`character_slots`=?,`pincode`=?,`pincode_change`=?,`last_mac`=? WHERE `account_id` = '%d'", db->account_db, acc->account_id)
 		||  SQL_SUCCESS != SQL->StmtBindParam(stmt,  0, SQLDT_STRING, acc->userid,           strlen(acc->userid))
 		||  SQL_SUCCESS != SQL->StmtBindParam(stmt,  1, SQLDT_STRING, acc->pass,             strlen(acc->pass))
 		||  SQL_SUCCESS != SQL->StmtBindParam(stmt,  2, SQLDT_ENUM,   &acc->sex,             sizeof(acc->sex))
@@ -682,6 +684,7 @@ static bool mmo_auth_tosql(AccountDB_SQL* db, const struct mmo_account* acc, boo
 		||  SQL_SUCCESS != SQL->StmtBindParam(stmt, 12, SQLDT_UCHAR,  &acc->char_slots,      sizeof(acc->char_slots))
 		||  SQL_SUCCESS != SQL->StmtBindParam(stmt, 13, SQLDT_STRING, &acc->pincode,         strlen(acc->pincode))
 		||  SQL_SUCCESS != SQL->StmtBindParam(stmt, 14, SQLDT_LONG,   &acc->pincode_change,  sizeof(acc->pincode_change))
+		||  SQL_SUCCESS != SQL->StmtBindParam(stmt, 15, SQLDT_STRING, acc->mac_address,      strlen(acc->mac_address))
 		||  SQL_SUCCESS != SQL->StmtExecute(stmt)
 		) {
 			SqlStmt_ShowDebug(stmt);
diff --git a/src/login/lclif.c b/src/login/lclif.c
index 9515c59..05bc22a 100644
--- a/src/login/lclif.c
+++ b/src/login/lclif.c
@@ -207,6 +207,7 @@ enum parsefunc_rcode lclif_parse_CA_SSO_LOGIN_REQ(int fd, struct login_session_d
 	sd->version = packet->version;
 	safestrncpy(sd->userid, packet->id, NAME_LENGTH);
 	safestrncpy(sd->passwd, packet->t1, min(tokenlen + 1, PASSWD_LEN)); // Variable-length field, don't copy more than necessary
+	safestrncpy(sd->mac_address, packet->mac_address, 17);	// Mac Length on Address is 17
 
 	if (login->config->use_md5_passwds)
 		MD5_String(sd->passwd, sd->passwd);
diff --git a/src/login/lclif.p.h b/src/login/lclif.p.h
index ae9d1bc..a3d9cbc 100644
--- a/src/login/lclif.p.h
+++ b/src/login/lclif.p.h
@@ -153,7 +153,7 @@ struct packet_CA_SSO_LOGIN_REQ {
 	uint8 clienttype;     ///< Clienttype
 	char id[24];          ///< Username
 	char password[27];    ///< Password
-	int8 mac_address[17]; ///< MAC Address
+	char mac_address[17]; ///< MAC Address
 	char ip[15];          ///< IP Address
 	char t1[];            ///< SSO Login Token (variable length)
 } __attribute__((packed));
@@ -165,7 +165,7 @@ struct packet_CA_SSO_LOGIN_REQa {
 	uint32 version;
 	uint8 clienttype;
 	char id[24];
-	int8 mac_address[17];
+	char mac_address[17];
 	char ip[15];
 	char t1[];
 } __attribute__((packed));
diff --git a/src/login/login.c b/src/login/login.c
index d7c7321..83a1faf 100644
--- a/src/login/login.c
+++ b/src/login/login.c
@@ -1174,6 +1174,7 @@ int login_mmo_auth(struct login_session_data* sd, bool isServer) {
 	// update account data
 	timestamp2string(acc.lastlogin, sizeof(acc.lastlogin), time(NULL), "%Y-%m-%d %H:%M:%S");
 	safestrncpy(acc.last_ip, ip, sizeof(acc.last_ip));
+	memcpy(acc.mac_address, sd->mac_address, sizeof(acc.mac_address));
 	acc.unban_time = 0;
 	acc.logincount++;
 
diff --git a/src/login/login.h b/src/login/login.h
index 36085ae..fbeb043 100644
--- a/src/login/login.h
+++ b/src/login/login.h
@@ -56,6 +56,8 @@ struct login_session_data {
 	int login_id1;
 	int login_id2;
 	char sex;// 'F','M','S'
+	
+	char mac_address[17];
 
 	char userid[NAME_LENGTH];
 	char passwd[PASSWD_LEN];
